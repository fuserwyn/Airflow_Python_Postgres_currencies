[2022-12-07T23:54:19.830+0000] {taskinstance.py:1165} INFO - Dependencies all met for <TaskInstance: dag.metric_mse manual__2022-12-07T23:53:59.845330+00:00 [queued]>
[2022-12-07T23:54:19.855+0000] {taskinstance.py:1165} INFO - Dependencies all met for <TaskInstance: dag.metric_mse manual__2022-12-07T23:53:59.845330+00:00 [queued]>
[2022-12-07T23:54:19.856+0000] {taskinstance.py:1362} INFO - 
--------------------------------------------------------------------------------
[2022-12-07T23:54:19.857+0000] {taskinstance.py:1363} INFO - Starting attempt 1 of 1
[2022-12-07T23:54:19.858+0000] {taskinstance.py:1364} INFO - 
--------------------------------------------------------------------------------
[2022-12-07T23:54:19.890+0000] {taskinstance.py:1383} INFO - Executing <Task(PostgresOperator): metric_mse> on 2022-12-07 23:53:59.845330+00:00
[2022-12-07T23:54:19.897+0000] {standard_task_runner.py:55} INFO - Started process 514 to run task
[2022-12-07T23:54:19.903+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'dag', 'metric_mse', 'manual__2022-12-07T23:53:59.845330+00:00', '--job-id', '30', '--raw', '--subdir', 'DAGS_FOLDER/dag.py', '--cfg-path', '/tmp/tmpmboq0obo']
[2022-12-07T23:54:19.904+0000] {standard_task_runner.py:83} INFO - Job 30: Subtask metric_mse
[2022-12-07T23:54:19.993+0000] {task_command.py:376} INFO - Running <TaskInstance: dag.metric_mse manual__2022-12-07T23:53:59.845330+00:00 [running]> on host 564356c68f54
[2022-12-07T23:54:20.107+0000] {taskinstance.py:1592} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=lofitravel
AIRFLOW_CTX_DAG_ID=dag
AIRFLOW_CTX_TASK_ID=metric_mse
AIRFLOW_CTX_EXECUTION_DATE=2022-12-07T23:53:59.845330+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2022-12-07T23:53:59.845330+00:00
[2022-12-07T23:54:20.123+0000] {base.py:71} INFO - Using connection ID 'postgres_localhost' for task execution.
[2022-12-07T23:54:20.137+0000] {sql.py:315} INFO - Running statement: CREATE OR REPLACE PROCEDURE calculate_metric_mse()
                    LANGUAGE SQL
                    AS $$
                        SELECT pairs.date, pairs.ticker_from, pairs.ticker_to, amount, amount_prediction, 
                        AVG(POWER(amount - amount_prediction, 2)) 
                        OVER (PARTITION BY pairs.ticker_from, pairs.ticker_to 
                            ORDER BY pairs.date DESC ROWS BETWEEN 29 PRECEDING AND CURRENT ROW) 
                            AS metric_mse 
                        FROM pairs
                        JOIN (
                            SELECT date, ticker_from, ticker_to, amount_prediction
                            FROM predictions
                        ) AS preds
                        ON pairs.date = preds.date
                            AND pairs.ticker_from = preds.ticker_from
                            AND pairs.ticker_to = preds.ticker_to
                    $$, parameters: None
[2022-12-07T23:54:20.155+0000] {taskinstance.py:1406} INFO - Marking task as SUCCESS. dag_id=dag, task_id=metric_mse, execution_date=20221207T235359, start_date=20221207T235419, end_date=20221207T235420
[2022-12-07T23:54:20.194+0000] {local_task_job.py:159} INFO - Task exited with return code 0
[2022-12-07T23:54:20.229+0000] {taskinstance.py:2623} INFO - 0 downstream tasks scheduled from follow-on schedule check
